{"version":3,"sources":["OAuthLink.js","groupsAPI.js","GroupEditor.js","Groups.js","useCurrentUri.js","useWebexOAuth.js","App.js","reportWebVitals.js","index.js"],"names":["OAuthLink","clientID","loginText","redirectURI","webexAPIBaseURL","href","getGroups","token","a","fetch","method","headers","Accept","Authorization","response","ok","json","resulterr","Error","status","message","result","console","log","JSON","stringify","groups","getGroup","groupID","includeMembers","createGroup","displayName","description","members","membersFormatted","split","map","m","id","postBody","body","updateGroup","membersAdd","membersDelete","operation","forEach","diff","push","patchBody","GroupEditor","newGroup","onSave","group","useState","editingGroup","setEditingGroup","editingGroupAddMember","setEditingGroupAddMember","handleEditingGroupChange","key","target","editedCreateGroup","value","type","onChange","event","length","member","index","onClick","memberID","filter","handleRemoveEditingGroupMember","placeholder","props","PropTypes","bool","func","isRequired","object","defaultProps","Groups","groupsList","setGroupsList","isFetching","setIsFetching","isLoadingGroupDetails","setIsLoadingGroupDetails","err","setErr","editingGroupOriginal","setEditingGroupOriginal","useEffect","updateGroups","handleCreateGroup","groupToCreate","handleEditGroup","groupId","constructedGroup","handleUpdateGroup","editedGroup","x","includes","groupUpdate","className","useCurrentUri","currentUri","setCurrentUri","redirect_uri","window","location","protocol","host","pathname","endsWith","slice","encodeURIComponent","useWebexOAuth","webexToken","setWebexToken","hash","parsedHash","queryString","parse","Reflect","deleteProperty","App","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a69bdb5c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction OAuthLink({clientID, loginText, redirectURI, webexAPIBaseURL}) {\n  \n  \n  return (\n    <>\n      <a\n      href={`${webexAPIBaseURL}?client_id=${clientID}&response_type=token&redirect_uri=${redirectURI}&scope=identity%3Agroups_rw%20identity%3Agroups_read`}\n      >\n        {loginText}\n      </a>\n    </>\n  );\n}\n\nOAuthLink.propTypes = {\n  clientID: PropTypes.string.isRequired,\n  loginText: PropTypes.string.isRequired,\n  redirectURI: PropTypes.string.isRequired,\n  webexAPIBaseURL: PropTypes.string.isRequired\n};\n\nexport default OAuthLink;","export async function getGroups(token) {\n  const response = await fetch('https://webexapis.com/v1/groups', {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`, \n    },\n    });\n  \n    if (!response.ok) {\n      const resulterr = await response.json();\n      throw new Error(`Error! status: ${response.status}, message: ${resulterr.message}`);\n    }\n  \n    const result = await response.json();\n    \n    console.log('result is: ', JSON.stringify(result, null, 4));\n\n    return result.groups;\n}\n\nexport async function getGroup(token, groupID, includeMembers = false) {\n  const response = await fetch(`https://webexapis.com/v1/groups/${groupID}?includeMembers=${includeMembers}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`, \n    },\n  });\n\n  if (!response.ok) {\n    const resulterr = await response.json();\n    throw new Error(`Error! status: ${response.status}, message: ${resulterr.message}`);\n  }\n\n  const result = await response.json();\n  \n  console.log('result is: ', JSON.stringify(result, null, 4));\n\n  return result;\n}\n\nexport async function createGroup(token, {displayName, description, members}) {\n  const membersFormatted = members.split(',').map((m) => ({id: m}));\n  // Create POST Body from inputs\n  const postBody = {\n    displayName,\n    description,\n    members: membersFormatted\n  };\n\n  const response = await fetch('https://webexapis.com/v1/groups', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`, \n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(postBody)\n  });\n\n  if (!response.ok) {\n    const resulterr = await response.json();\n    throw new Error(`Error! status: ${response.status}, message: ${resulterr.message}`);\n  }\n\n  const result = await response.json();\n\n  console.log('result is: ', JSON.stringify(result, null, 4));\n\n  return result;\n}\n\nexport async function updateGroup(token, {groupID, displayName, description, membersAdd = [], membersDelete = []}) {\n  // PATCH for Members format:\n  // [{\n  //   \"id\": \"....\",\n  //   \"operation\": \"add\" || \"delete\"\n  // }]\n  const members = membersAdd?.map((m) => ({id: m, operation: 'add'}));\n  membersDelete.forEach((diff) => {\n    members.push({id: diff, operation: 'delete'});\n  });\n  \n  // Create PATCH Body from inputs\n  const patchBody = {\n    displayName,\n    description,\n    members\n  };\n\n  const response = await fetch(`https://webexapis.com/v1/groups/${groupID}`, {\n    method: 'PATCH',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`, \n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(patchBody)\n  });\n\n  if (!response.ok) {\n    const resulterr = await response.json();\n    throw new Error(`Error! status: ${response.status}, message: ${resulterr.message}`);\n  }\n\n  const result = await response.json();\n  \n  console.log('result is: ', JSON.stringify(result, null, 4));\n\n  return result;\n}","import {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nfunction GroupEditor({newGroup = false, onSave, group}) {\n\n  const [editingGroup, setEditingGroup] = useState({\n    id: '',\n    displayName: '',\n    description: '',\n    members: [],\n    ...group\n  });\n  const [editingGroupAddMember, setEditingGroupAddMember] = useState('');\n\n  const handleEditingGroupChange = ({target}, key) => {\n    const editedCreateGroup = {...editingGroup};\n    editedCreateGroup[key] = target.value;\n    setEditingGroup(editedCreateGroup);\n  };\n\n  const handleAddEditingGroupMember = () => {\n    const group = {...editingGroup};\n    group.members.push(editingGroupAddMember);\n    setEditingGroup(group);\n    setEditingGroupAddMember('');\n  };\n\n  const handleRemoveEditingGroupMember = (memberID) => {\n    const group = {...editingGroup};\n    group.members = group.members.filter((member) => member !== memberID);\n    setEditingGroup(group);\n  };\n\n  const handleEditingGroupAddMemberChange = ({target}) => {\n    setEditingGroupAddMember(target.value);\n  };\n\n  const handleSaveGroup = () => {\n    onSave(editingGroup);\n  };\n  \n\n  return (\n    <div>\n    <h2>{newGroup && 'New '} Group Editor</h2>\n    <ul>\n      <li>Group ID: {newGroup ? '< new group >'  : editingGroup.id}</li>\n      <li>Display Name <input type=\"text\" value={editingGroup.displayName} onChange={(event) => handleEditingGroupChange(event, 'displayName')}/></li>\n      <li>Description <input type=\"text\" value={editingGroup.description} onChange={(event) => handleEditingGroupChange(event, 'description')}/></li>\n      <li>Members ({editingGroup.members?.length || 0})\n        <ul>\n          {editingGroup.members?.map((member, index) => (\n            <li key={index}>{member}<button onClick={() => handleRemoveEditingGroupMember(member)}>remove</button></li>\n          ))}\n          <li><input type=\"text\" placeholder='Member ID to Add' value={editingGroupAddMember} onChange={handleEditingGroupAddMemberChange} /><button onClick={handleAddEditingGroupMember}>Add</button></li>\n        </ul>\n      </li>\n      <li><button onClick={handleSaveGroup}>{newGroup ? 'Save' : 'Update'} Group</button></li>\n    </ul>\n    \n    </div>\n  )\n}\n\nGroupEditor.props = {\n  newGroup: PropTypes.bool,\n  onSave: PropTypes.func.isRequired,\n  group: PropTypes.object.isRequired\n};\n\nGroupEditor.defaultProps = {\n  newGroup: true\n};\n\nexport default GroupEditor;","import {useEffect, useState} from 'react';\n\nimport {createGroup, getGroup, getGroups, updateGroup} from './groupsAPI';\n\nimport GroupEditor from './GroupEditor';\n\nimport './Groups.css';\n\nfunction Groups({token}) {\n  const [groupsList, setGroupsList] = useState(null);\n  const [isFetching, setIsFetching] = useState(false);\n  const [isLoadingGroupDetails, setIsLoadingGroupDetails] = useState(false);\n  const [err, setErr] = useState('');\n  const [editingGroupOriginal, setEditingGroupOriginal] = useState(null);\n  const [editingGroup, setEditingGroup] = useState(null);\n  \n  // Load our groups when we render\n  useEffect(() => {\n    const updateGroups = async () => {\n      setIsFetching(true);\n      setErr('');\n    \n      try {\n        const groups = await getGroups(token);\n        setGroupsList(groups);\n      } catch (requestError) {\n        setErr(requestError.message);\n      } finally {\n        setIsFetching(false);\n      }\n    };\n\n    updateGroups();\n  }, [token]);\n \n  // Create a new group via POST\n  const handleCreateGroup = async (groupToCreate) => {\n    setErr('');\n\n    try {\n      const createdGroup = await createGroup(token, groupToCreate);\n  \n      // TODO: Add new group to displayed list\n    } catch (requestError) {\n      setErr(requestError.message);\n    }\n  };\n\n  // Load details of existing group to display in editor\n  const handleEditGroup = async (groupId) => {\n    setIsLoadingGroupDetails(true);\n    setEditingGroup(null);\n    setErr('');\n    \n    try {\n      const result = await getGroup(token, groupId, true);\n\n      const constructedGroup = {\n        \"id\": result.id,\n        \"displayName\": result.displayName,\n        \"description\": result.description || '',\n        \"members\": result.members?.map((m) => m.id)\n      };\n      setEditingGroup(constructedGroup);\n      setEditingGroupOriginal(constructedGroup);\n      \n    } catch (requestError) {\n      setErr(requestError.message);\n    } finally {\n      setIsLoadingGroupDetails(false);\n    }\n  };\n\n  // Update the group details with a PATCH request\n  const handleUpdateGroup = async (editedGroup) => {\n    // TODO: Function\n    setErr('');\n    \n    try {\n      const membersAdd = editedGroup.members;\n      // Diff the original members if any have been removed\n      let membersDelete = editingGroupOriginal.members.filter(x => !editedGroup.members.includes(x));\n      \n      const groupUpdate = {\n        groupID: editedGroup.id, \n        displayName: editedGroup.displayName, \n        description: editedGroup.description,\n        membersAdd,\n        membersDelete\n      };\n\n      const result = await updateGroup(token, groupUpdate);\n  \n      const constructedGroup = {\n        \"id\": result.id,\n        \"displayName\": result.displayName,\n        \"decription\": result.description || '',\n        \"members\": result.members?.map((m) => m.id)\n      };\n      setEditingGroup(constructedGroup);\n      setEditingGroupOriginal(constructedGroup);\n      // TODO: Update group in main group list\n    } catch (requestError) {\n      setErr(requestError.message);\n    }\n  };\n\n  return (\n    <div className=\"groups\">\n      {err && (\n        <div className='section'>\n          <h3 className='error'>{err}</h3>\n        </div>\n      )}\n      <div className=\"section\">\n        <h2>My Groups</h2>\n        { isFetching && (\n          <div>Loading groups...</div>\n        )}\n        {\n          groupsList && (\n            <ul>\n              {groupsList.map((group) => (\n                <li key={group.id}>{group.displayName}\n                  <ul>\n                    <li>ID: {group.id}</li>\n                    <li>Description:  {group.description}</li>\n                    <li><button onClick={() => handleEditGroup(group.id)}>Edit</button></li>\n                  </ul>\n                </li>\n              ))}\n            </ul>\n          )\n        }\n        <div className=\"section\">\n          <h3>Group Editor</h3>\n          {\n            isLoadingGroupDetails && (\n              <>Loading Group Details...</>\n            )\n          }\n          {\n            editingGroup && <GroupEditor newGroup={false} group={editingGroup} onSave={handleUpdateGroup}/>\n          }\n        </div>\n      </div>\n      <div className='section'>\n        <GroupEditor newGroup onSave={handleCreateGroup}/>\n      </div>\n    </div>\n  )\n}\n\nexport default Groups;","import { useEffect, useState } from 'react';\n\n/**\n * Gets the current URL and encodes it for use as a redirect uri\n * @returns {Hook}\n */\nfunction useCurrentUri() {\n  const [currentUri, setCurrentUri] = useState('');\n\n  useEffect(() => {\n    let redirect_uri = `${window.location.protocol}//${window.location.host}`;\n\n    if (window.location.pathname) {\n      redirect_uri += window.location.pathname;\n    }\n    \n    // Remove trailing slash because Webex OAuth doesn't like trailing slashes\n    redirect_uri = redirect_uri.endsWith('/') ? redirect_uri.slice(0, -1) : redirect_uri;\n\n    setCurrentUri(encodeURIComponent(redirect_uri));\n  }, []);\n\n  return currentUri;\n}\n\nexport default useCurrentUri;","import { useEffect, useState } from 'react';\nimport queryString from 'query-string';\n\n/**\n * This function captures the \"access_token\" hash value returned from an implicit grant OAuth call\n * and stores it in react state, then clears the hash values for security.\n * \n * @returns {Hook}\n */\nfunction useWebexOAuth() {\n  const [webexToken, setWebexToken] = useState('');\n  const { hash } = window.location;\n\n  \n  useEffect(() => {\n    if (!webexToken && hash) {\n      const parsedHash = queryString.parse(hash);\n      // Our access token lives in the `access_token` variable in the hash\n      parsedHash['access_token'] && setWebexToken(parsedHash['access_token']);\n      \n      // Clear any items from the hash that were provided by implicit grant flow\n      [\n        'access_token',\n        'token_type',\n        'expires_in',\n        'refresh_token',\n        'refresh_token_expires_in'\n      ].forEach((key) => Reflect.deleteProperty(parsedHash, key));\n      window.location.hash = queryString.stringify(parsedHash);\n    }\n  }, [webexToken, hash]);\n\n  return webexToken;\n}\n\nexport default useWebexOAuth;","import Auth from './OAuthLink';\nimport Groups from './Groups';\nimport useCurrentUri from './useCurrentUri';\nimport useWebexOAuth from './useWebexOAuth';\n\nimport './App.css';\n\nfunction App() {\n  const webexToken = useWebexOAuth();  \n  const redirectURI = useCurrentUri();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Webex Groups</h1>\n        <h3>A GUI Interface for the <a href=\"https://developer.webex.com/docs/api/v1/groups\">Webex Groups API</a></h3>\n      </header>\n      <div className='Main'>\n      { \n          webexToken ? \n          (\n            <Groups token={webexToken} />\n          ) : \n          (\n            <div className='Login'>\n              {\"To use this tool, login with an organization admin user: \"}\n              <Auth \n                clientID={process.env.REACT_APP_WEBEX_CLIENT_ID} \n                loginText=\"Login to Webex\"\n                redirectURI={redirectURI}\n                webexAPIBaseURL={process.env.REACT_APP_WEBEX_BASE_URL}\n              />\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}